<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>planetiler-custommap</artifactId>

  <parent>
    <groupId>com.onthegomap.planetiler</groupId>
    <artifactId>planetiler-parent</artifactId>
    <version>${revision}</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>com.onthegomap.planetiler</groupId>
      <artifactId>planetiler-core</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.commonmark</groupId>
      <artifactId>commonmark</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectnessie.cel</groupId>
      <artifactId>cel-tools</artifactId>
    </dependency>

    <dependency>
      <groupId>com.onthegomap.planetiler</groupId>
      <artifactId>planetiler-core</artifactId>
      <version>${project.parent.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.projectnessie.cel</groupId>
        <artifactId>cel-bom</artifactId>
        <version>0.5.3</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>io.github.zlika</groupId>
        <artifactId>reproducible-build-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <configuration>
          <!-- we don't want to deploy this module -->
          <skipPublishing>true</skipPublishing>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.dataliquid</groupId>
        <artifactId>json-yaml-validator-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>

          <execution>
            <id>validate-positive-yaml</id>
            <phase>validate</phase>
            <goals>
              <goal>validate</goal>
            </goals>
            <configuration>
              <sourceDirectory>.</sourceDirectory>
              <includes>
                <include>src/test/resources/validSchema/*.yml</include>
                <include>src/main/resources/samples/*.yml</include>
              </includes>
              <excludes>
                <exclude>src/main/resources/samples/*.spec.yml</exclude>
                <!-- shortbread.yml uses aliases which are not supported yet.
                     See https://github.com/dataliquid/json-yaml-validator-maven-plugin/issues/52
                -->
                <exclude>src/main/resources/samples/shortbread.yml</exclude>
              </excludes>
              <schemaFile>planetiler.schema.json</schemaFile>
            </configuration>
          </execution>

          <execution>
            <id>validate-positive-spec-yaml</id>
            <phase>validate</phase>
            <goals>
              <goal>validate</goal>
            </goals>
            <configuration>
              <sourceDirectory>.</sourceDirectory>
              <includes>
                <include>src/main/resources/samples/*.spec.yml</include>
              </includes>
              <schemaFile>planetilerspec.schema.json</schemaFile>
            </configuration>
          </execution>

<!-- There is no known way to use the plugin to verify that invalid examples violate the schema
     See https://github.com/dataliquid/json-yaml-validator-maven-plugin/issues/51
          <execution>
            <id>validate-negative-yaml</id>
            <phase>validate</phase>
            <goals>
              <goal>validate</goal>
            </goals>
            <configuration>
              <sourceDirectory>.</sourceDirectory>
              <includes>
                <include>src/test/resources/invalidSchema/*.yml</include>
              </includes>
              <schemaFile>planetiler.schema.json</schemaFile>
              <mustError>true</mustError>
            </configuration>
          </execution>
-->    

        </executions>
      </plugin>

    </plugins>
  </build>
</project>
